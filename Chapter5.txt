Lab 5-1:

107/494

1. Address of DllMain is 0x1000D02E, .text section.


2. gethostbyname import is located at 0x100163CC, .idata section. 


3. gethostbyname is called 9 times (graph shown in Lab5-1q2.png).


4. 0ff_10019040 is moved into register eax. Following the link to off_10019040  shows the string "[This is RDO]pics.practicalmalwareanalysis.com", so pics.practicalmalwareanalysis.com will be the DNS request made.


5. The answers in the textbook said there are 23 local variables at 0x10001656, but I can only see 20. Turns out this is due to IDA Pro free version showing fewer things than the full paid version.


6. As above, possible discrepancies between free and paid versions of IDA Pro. The free version counts 1 parameter.


7. "\cmd.exe /c " is at 0x10095B34.


8. Looks like there is output being written in cmd. "Hi,Master [timestamp]", "WelCome Back...Are You Enjoying Today?", etc. Machine uptimes and idle times are displayed, plus stuff about encrypting a magic number for this remote shell session.

Following the XREFs for these strings shows they are pushed to a stack when these functions are called.

The function recv is the first function called after the cmd string is pushed to a stack. MSDN says this is to do with sockets and incoming data, backing up the earlier suspicion that this DLL sets up a remote shell session for the attacker on the infected machine.


9. wVersionRequested appears to be pushed onto the stack near the use of dword_1008E5C4 at 0x10001678, so the path taken looks like it's decided by which version of Windows the victim is running.

eax is moved into the dword register, and the value of eax is set in the line above with a call to sub_10003695. Investigating this function does indeed confirm that the value of dword_1008E5C4 is determined by which version of Windows is being run.


10. I found the memcmp with robotwork by searching for the text "robotwork", which IDA Pro has helpfully added as a comment.

There is a jnz (jump if not zero) command at 0x10010461 - if memcmp returns zero (ie. string == robotwork) the jump will not be taken, the value at address [ebp+s] will be pushed to the stack and sub_100052A2 will be called. This function takes a socket as an argument and calls functions based on querying registry keys, so it could be transmitting data about registry values. 

"SOFTWARE\\Microsoft\\Windows\\CurrentVersion" appears as a string before RegOpenKeyA, so SOFTWARE\Microsoft\Windows\CurrentVersion is being queried. "WorkTime" appears before RegQueryValueExA, so this is the value in the key which is being queried. This information appears to be used in the output "[Robot_WorkTime :]".


11. 

